{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"39b0c2c0-4d60-5f5f-a213-1683cd52ae56","frontmatter":{"title":"Blank Canvas","link1":"https://github.com/BenGSchulz/BlankCanvas","link2":"https://sundy.itch.io/blankcanvas","previewImage":"https://raw.githubusercontent.com/BenGSchulz/BlankCanvas/master/images/BC2.png"},"html":"<h1>Overview</h1>\n<p>Take up your paintbrush in this stealth platformer as you traverse a bleak world, leaving behind your own splash of color.</p>\n<p>Play as a starving artist whose creativity has been suppressed by a tyrannical regime. Gather your courage and venture out at night, sneaking across the rooftops of your city to express yourself and paint a mural on a government building.</p>\n<p>Paint the world freely using your paintbrush, use special paints to solve puzzles and give yourself superhuman abilities, and sneak by the goons patrolling the streets around you.</p>\n<p>Blank Canvas is the game created for my capstone game development course. I worked on this game with two other programmers using Unreal Engine 4.</p>\n<h1>Development</h1>\n<p>The development process went through three phases, each about 2.5 months long. Our first phase was largely conceptual and culminated in a game pitch with a small prototype demo. Throughout this phase, we all devised multiple smaller pitches that were focused on simple premises or ideas for mechanics. These were critiqued and narrowed down until we found one we were all excited to pursue further. We chose UE4 as the engine because we felt that the quick turn around on prototyping with blueprints would help us to iterate on mechanics quickly and smoothly and give us some more time to focus on art and design, which we were all not as comfortable with. I believe we are all happy with the choice and we enjoyed other features of the engine as well, like the animation, sound, and AI systems.The pitch we ended with was quite different from our final product, though, being a combat focused beat-em-up as opposed to the stealth-flavored puzzle game we ended with.</p>\n<p>Phase 2 brought the game from a prototype to an alpha build. The goal was to implement the list of features that we included in our pitch. We started off by editing this list pretty heavily as we decided we didn't really like the direction we were going with beat-em-up. We felt it didn't emphasize the unique painting aspect of our game. After deciding a new feature goal list, we started the development. We worked in sprints, deciding on tasks in weekly standups. We organized tasks using GitHub projects and we also used GitHub as our source control. I worked largely on the AI and some miscellaneous features like checkpoints and distraction paint mechanics. We also had weekly playtests with pro developers in the rear of this phase that were very valuable in rooting out bugs and tuning gameplay.</p>\n<p>Through phase 3 we went to work juicing the game up. We filled our greyboxed levels with assets from the UE store and added sounds and more story beats. This phase was also full of gameplay tweaks as we continued playtesting. We showed the game at a small gaming expo hosted by DU (DU Arcade) and also got a lot of valuable feedback from the audience there. It was a great experience to have so many people play our game and have them enjoy it. The end of the school year signaled the end of development and we came away with a beta-version we are proud of.</p>\n<h1>Post-Mortem</h1>\n<p>The strongest aspect of our game is the painting mechanic, it allows for some fun puzzle design and it is easily expandable to add new paint behaviors. I think we could have benefitted from moving away from or reworking the stealth aspects. Oftentimes the paint and stealth mechanics were in conflict as the former promotes movement and experimentation while the latter punishes that behavior. A potential rework could see the AI changed from patrols to sensors that add another, more well-defined, puzzle mechanic. Ultimately, finding a better balance between the painting and enemies would be beneficial.</p>\n<p>I learned so much about development throughout the making of this game. I loved learning UE4's behavior trees and found a new appreciation for game AI. I continued to grow my knowledge of UE4's other features too and am confident now in my skills to bring ideas to life in the engine. It was great to collaborate with a team and I gained a lot of insight into how planning for a team is different than for solo projects. The constant feedback from both team members and our playtesters was instrumental in reaching an end product we take pride in.</p>\n<h1>Screenshots</h1>\n<p><img src=\"https://raw.githubusercontent.com/BenGSchulz/BlankCanvas/master/images/BC1.png\" alt=\"Screenshot 1\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/BlankCanvas/master/images/BC2.png\" alt=\"Screenshot 2\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/BlankCanvas/master/images/BC3.png\" alt=\"Screenshot 3\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/BlankCanvas/master/images/BC4.jpg\" alt=\"Screenshot 4\"></p>"}},{"node":{"id":"67f72d0e-4f06-567c-a660-9f28bf1aa00b","frontmatter":{"title":"Dark Frontier","link1":"https://github.com/BenGSchulz/DarkFrontier","link2":"https://bengschulz.itch.io/darkfrontier","previewImage":"https://raw.githubusercontent.com/BenGSchulz/DarkFrontier/master/images/DF4.JPG"},"html":"<h1>Overview</h1>\n<p>Dark Frontier is a top-down horror western shoot-em-up. Kill enemies with your trusty revolver before they can get to you. Watch your ammo, though!</p>\n<p>This was my first full game project using Unity. I started with an overly ambitious design document with a set of features that very quickly started slipping. I am happy with the overall look and feel of the game. I managed to piece together free game art/sounds and made my own UI that fit the aethetic I was going for. The gameplay is the weak point, having only one working mechanic and unintelligent AI. I learned a very valuable lesson about design scoping through this project and it's helped me to set more realistic goals in other projects.</p>\n<hr>\n<p>Assets</p>\n<ul>\n<li><a href=\"https://opengameart.org/content/cowboy-game-sprites\">https://opengameart.org/content/cowboy-game-sprites</a></li>\n<li><a href=\"https://opengameart.org/content/whispers-of-avalon-grassland-tileset\">https://opengameart.org/content/whispers-of-avalon-grassland-tileset</a></li>\n<li><a href=\"https://freesound.org/people/TheDweebMan/sounds/277192/\">https://freesound.org/people/TheDweebMan/sounds/277192/</a></li>\n</ul>\n<h1>Screenshots</h1>\n<p><img src=\"https://raw.githubusercontent.com/BenGSchulz/DarkFrontier/master/images/DF1.JPG\" alt=\"Screenshot 1\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/DarkFrontier/master/images/DF2.JPG\" alt=\"Screenshot 2\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/DarkFrontier/master/images/DF3.JPG\" alt=\"Screenshot 3\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/DarkFrontier/master/images/DF4.JPG\" alt=\"Screenshot 4\"></p>"}},{"node":{"id":"6d6359c6-4794-5ff2-8dd9-18d2804a92a4","frontmatter":{"title":"Web Cookbook","link1":"https://github.com/BenGSchulz/WebCookbook","link2":"https://recipes-web-app.herokuapp.com/","previewImage":"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/images/WC4.JPG"},"html":"<h1>Overview</h1>\n<p>This is the first full-stack application I built. It uses the MEAN stack with bootstrap and UI bootstrap (generated with the <a href=\"https://github.com/DaftMonk/generator-angular-fullstack\">Angular Full-Stack Generator</a> version 4.2.2). I am quite happy with the back-end functionality of the app. You can perform CRUD operations on Users, Recipes, and Reviews (<a href=\"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/documentation/project01Doc.txt\">Documentation</a>). The front-end is plain but responsive and uses some nice components provided by UI Bootstrap. If I were to continue work on the project, I would spruce up the interface with some custom styling and color themes. I would also add authorization for users and add restrictions to certain actions like reviewing and deleting. Another nice feature to add would be a way for users to save and search for specific recipes.</p>\n<h1>Screenshots</h1>\n<p><img src=\"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/images/WC1.JPG\" alt=\"Screenshot 1\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/images/WC2.JPG\" alt=\"Screenshot 2\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/images/WC3.JPG\" alt=\"Screenshot 3\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/images/WC4.JPG\" alt=\"Screenshot 4\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/WebCookbook/master/images/WC5.JPG\" alt=\"Screenshot 5\"></p>"}},{"node":{"id":"51ae3e1e-8a4c-5e59-872e-11cac55a08f5","frontmatter":{"title":"EDP Portfolio","link1":"https://github.com/BenGSchulz/EmergentDigitalPortfolio","link2":"https://bengschulz.github.io/EmergentDigitalPortfolio","previewImage":"https://raw.githubusercontent.com/BenGSchulz/EmergentDigitalPortfolio/master/images/EDP2.JPG"},"html":"<h1>Overview</h1>\n<p>This is a portfolio showing the projects I've completed in various Emergent Digital Practices classes. It is the first full web development project I completed. It is built with vanilla JS/HTML/CSS. Images of my EDP projects are organized under the tab for the class they were made for. I am happy with the look and design of the site, especially the fact that everything is displayed on a single page. This leads to the major weakness of the portfolio, though, making it so the tabbing navigation system is not flexible. If I wanted to add another class, it would require editing a lot of the code for current content as well. If I were to do this project over, using a library like react would really help to modularize the content and ease the addition of new content. I am taking this approach for my personal website, ensuring that minimal work is required to add new projects or sections to the site.</p>\n<h1>Screenshots</h1>\n<p><img src=\"https://raw.githubusercontent.com/BenGSchulz/EmergentDigitalPortfolio/master/images/EDP1.JPG\" alt=\"Screenshot 1\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/EmergentDigitalPortfolio/master/images/EDP2.JPG\" alt=\"Screenshot 2\"></p>"}},{"node":{"id":"6531c7cb-5eac-5686-8093-6306e86b7533","frontmatter":{"title":"Mars Maze","link1":"https://github.com/BenGSchulz/MarsMaze","link2":"https://bengschulz.itch.io/mars-maze","previewImage":"https://raw.githubusercontent.com/BenGSchulz/MarsMaze/master/images/MM4.JPG"},"html":"<h1>Overview</h1>\n<p>I created Mars Maze as my final project for a game programming class. Mars Maze was built up from my desire to make a puzzle game using random generation. I was also interested in doing a sci-fi game. These two ideas came together in the form of a first-person maze game where the player attempts to navigate a mars colony controlled by a hostile, haywire construction AI.</p>\n<p>It took some time to determine what method I wanted to use for random generation. I went through many iterations in my notebook and two in actual code. I settled on randomly generating a layout for a maze and spawning the structure in world as the player starts the game. I designed with the idea of having different room types that would make up the structure. Each type of room will introduce a new feature into the maze. Currently, there are normal rooms, turret rooms, and a control room. The intention was to experiment by adding new types of rooms into the construction that will affect how players can navigate the maze. This is one area where the game could be easily expanded. Other areas that need expansion would be AI behavior and variety, which I have more experience with now thanks to other projects. Another gameplay element that would increase the fun of my game would be item interaction to build upon puzzle elements. Overall, for the scope of this project I am proud with the product and I have a solid framework to build upon the game.</p>\n<p>This was my first time using UE4 (4.18) for a larger project and my introduction to many of the engine's features. I started the project in C++ but switched over to blueprints for faster prototyping given the little timeframe that we had. I really enjoyed my first foray into visual scripting and was surprised at how robust blueprints were. I think I would still like to go back and rewrite some systems in C++ to get more experience with that side. Additionally, each tool from the UE4 set that I used came with its own learning curve. Through the project, I gained familiarity with particles systems, landscapes, audio, UMG, camera animation, the material editor, character movement, and behavior trees. In the end, I was left with a positive impression of UE4 workflow and capabilities and am looking forward to both improving this project and working on others using this engine.</p>\n<hr>\n<p>Assets</p>\n<ul>\n<li>Sound Effects and Turret Texture: Eric Matyas (<a href=\"https://soundimage.org/\">https://soundimage.org/</a>)</li>\n<li>Music: Zander Noriega (<a href=\"https://opengameart.org/users/zander-noriega\">https://opengameart.org/users/zander-noriega</a>)</li>\n<li>More <a href=\"https://opengameart.org\">https://opengameart.org</a> sound effects</li>\n</ul>\n<h1>Screenshots</h1>\n<p><img src=\"https://raw.githubusercontent.com/BenGSchulz/MarsMaze/master/images/MM1.JPG\" alt=\"Screenshot 1\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/MarsMaze/master/images/MM2.JPG\" alt=\"Screenshot 2\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/MarsMaze/master/images/MM3.JPG\" alt=\"Screenshot 3\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/MarsMaze/master/images/MM4.JPG\" alt=\"Screenshot 4\">\n<img src=\"https://raw.githubusercontent.com/BenGSchulz/MarsMaze/master/images/MM5.JPG\" alt=\"Screenshot 5\"></p>"}},{"node":{"id":"47d312e6-60e9-5ce1-b877-3ea81afdd9ac","frontmatter":{"title":"WebGL Graphics","link1":"https://github.com/BenGSchulz/Graphics/","link2":"https://bengschulz.github.io/Graphics/","previewImage":"https://raw.githubusercontent.com/BenGSchulz/Graphics/master/images/G1.JPG"},"html":"<h1>Overview</h1>\n<p>This is a small interactive graphics project that I built for an introductory graphics course. We used WebGL to make a scene that was affected by user input. We wrote our own shaders with GLSL for texturing and lighting as well. There is a lot of room for improvement in this project, for instance adding interactive lighting or a moving camera. I am happy with the end product, though, and I enjoyed learning about the history and evolution of computer graphics, it is certainly a deep and complex field of development. I came away with from the course with a great appreciation for the foundation that drives the visual aspect games that I love so much. It also made me grateful for people who write higher level libraries like three.js that make bringing 3D graphics to the web a bit more streamlined.</p>\n<h1>Screenshots</h1>\n<p><img src=\"https://raw.githubusercontent.com/BenGSchulz/Graphics/master/images/G1.JPG\" alt=\"Screenshot 1\"></p>"}}]}}}